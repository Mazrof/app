services:
  # backend:
  #   build: ./back
  #   ports:
  #     - "3000:3000"

  #   networks:
  #     - back-network

  #   environment:
  #     - DATABASE_URL: ${DATABASE_URL}
  #     - FIREBASE_API_KEY: ${FIREBASE_API_KEY}
  #     - FIREBASE_AUTH_DOMAIN: ${FIREBASE_AUTH_DOMAIN}
  #     - FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
  #     - FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
  #     - FIREBASE_MESSAGING_SENDER_ID: ${FIREBASE_MESSAGING_SENDER_ID}
  #     - FIREBASE_APP_ID: ${FIREBASE_APP_ID}
  #     - FIREBASE_MEASUREMENT_ID: ${FIREBASE_MEASUREMENT_ID}
  #     - NODE_ENV: ${NODE_ENV}

  #   depends_on:
  #     - database

  database:
    image: postgres:alpine3.20

    networks:
      - back-network
      - db-network

    volumes:
      - db_data:/var/lib/postgresql/data

    environment:
      - POSTGRES_PASSWORD=mazrof
      - POSTGRES_USER=mazrof
      - POSTGRES_DB=mazrof

  admin:
    image: dpage/pgadmin4:8

    networks:
      - db-network
    
    depends_on:
      - database
    
    ports:
      - "4000:80"
    
    environment:
      - PGADMIN_DEFAULT_EMAIL=mazrof@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=mazrof
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass

configs:
  pgpass:
    content: db:5432:*:mazrof:mazrof
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "database",
        "Host": "database",
        "Port": 5432,
        "MaintenanceDB": "mazrof",
        "Username": "mazrof",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}

    



networks:
  back-network: {}
  db-network: {}



volumes:
  db_data: